# This script is hosted on https://get.activated.win for https://massgrave.dev

$troubleshoot = 'https://massgrave.dev/troubleshoot'
if ($ExecutionContext.SessionState.LanguageMode.value__ -ne 0) {
    $ExecutionContext.SessionState.LanguageMode
    Write-Host "Windows PowerShell is not running in Full Language Mode."
    Write-Host "Help - https://gravesoft.dev/fix_powershell" -ForegroundColor White -BackgroundColor Blue
    return
}

function Check3rdAV {
    $avList = Get-CimInstance -Namespace root\SecurityCenter2 -Class AntiVirusProduct | Where-Object { $_.displayName -notlike 'windows' } | Select-Object -ExpandProperty displayName
    if ($avList) {
        Write-Host '3rd party Antivirus might be blocking the script - ' -ForegroundColor White -BackgroundColor Blue -NoNewline
        Write-Host " $($avList -join ', ')" -ForegroundColor DarkRed -BackgroundColor White
    }
}

function CheckFile {
    param ([string]$FilePath)
    if (-not (Test-Path $FilePath)) {
        Check3rdAV
        Write-Host "Failed to create ATP.bat file in temp folder, aborting!"
        Write-Host "Help - $troubleshoot" -ForegroundColor White -BackgroundColor Blue
        throw
    }
}

[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
$DownloadURL = 'https://github.com/gloomycrow/ATP/releases/download/ATP/ATP.bat'

try {
    $response = Invoke-WebRequest -Uri $DownloadURL -UseBasicParsing
} catch {
    Check3rdAV
    Write-Host "Failed to retrieve ATP.bat from the specified URL, aborting!"
    Write-Host "Help - $troubleshoot" -ForegroundColor White -BackgroundColor Blue
    return
}

$rand = [Guid]::NewGuid().Guid
$isAdmin = [bool]([Security.Principal.WindowsIdentity]::GetCurrent().Groups -match 'S-1-5-32-544')
$FilePath = if ($isAdmin) { "$env:SystemRoot\Temp\ATP_$rand.bat" } else { "$env:USERPROFILE\AppData\Local\Temp\ATP_$rand.bat" }
Set-Content -Path $FilePath -Value $response.Content

CheckFile $FilePath

$env:ComSpec = "$env:SystemRoot\system32\cmd.exe"
$chkcmd = & $env:ComSpec /c "echo CMD is working"
if ($chkcmd -notcontains "CMD is working") {
    Write-Warning "cmd.exe is not working.`nReport this issue at $troubleshoot"
}
Start-Process -FilePath $env:ComSpec -ArgumentList "/c "$FilePath"" -Verb RunAs -Wait

$FilePaths = @("$env:SystemRoot\Temp\ATP_.bat", "$env:USERPROFILE\AppData\Local\Temp\ATP_.bat")
foreach ($FilePath in $FilePaths) { Get-Item $FilePath | Remove-Item }
